{"version":3,"file":"static/js/785.ff0e8bf6.chunk.js","mappings":"+SAOMA,EAAM,mCAECC,EAAS,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,kEACuCF,EADvC,oBAFC,cAElBG,EAFkB,yBAMhBA,EAASC,KAAKC,SANE,gCAQpBC,QAAQC,IAAR,MARoB,yDAAH,qDAYTC,EAAgB,mCAAG,WAAOC,GAAP,gGAERP,EAAAA,EAAAA,IAAA,4DACiCF,EADjC,kBAC8CS,EAD9C,oBAFQ,cAEzBN,EAFyB,yBAKnBA,EAASC,KAAKC,SALK,gCAQ3BC,QAAQC,IAAR,MAR2B,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAOC,GAAP,gGAEVT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,oBACgCX,EADhC,oBAFU,cAE3BG,EAF2B,yBAKrBA,EAASC,MALY,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,sDAYlBK,EAAkB,mCAAG,WAAOD,GAAP,gGAEVT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,4BACwCX,EADxC,oBAFU,cAE3BG,EAF2B,yBAMzBA,EAASC,KAAKS,MANW,gCAQ7BP,QAAQC,IAAR,MAR6B,yDAAH,sDAalBO,EAAkB,mCAAI,WAAOH,GAAP,gGAEXT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,4BACwCX,EADxC,oBAFW,cAE5BG,EAF4B,OAKjCG,QAAQC,IAAIJ,EAASC,KAAKC,SALO,kBAM1BF,EAASC,KAAKC,SANY,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAJ,qD,yGCX/B,UA3CgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBF,GAAW,GAFM,UAGCT,EAAAA,EAAAA,IAAmBC,GAHpB,OAGXW,EAHW,OAIjBP,EAAWO,GAJM,gDAMjBL,EAAS,EAAD,IANS,yBAQpBE,GAAW,GARS,4EAAH,qDAWlBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAS,yBAAMA,IACfE,GAAW,eACZ,0BACGJ,EAAQS,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOjB,GAKnB,IACmB,IAAnBO,EAAQa,SAAgB,2CAMhC,C","sources":["api/fechApi.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\n\n//https://api.themoviedb.org/3/movie/550?api_key=4e74e3ce82b875f858122cbc5cfec5bf\n\n\n\nconst KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'api/fechApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      } finally {\n     setLoading(false);\n    }\n    };\n    fetchReviews();\n  }, [movieId]);\n    \n  return (\n    <>\n      {error && <div>{error}</div>}\n      {loading && 'Loading ...'}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n        {reviews.length === 0 && <p>No reviews\n</p>}\n      </ul>\n     \n    </>\n  );\n};\n\nexport default Reviews;"],"names":["KEY","getMovies","axios","response","data","results","console","log","getMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","reviews","setReviews","error","setError","loading","setLoading","useEffect","fetchReviews","res","map","review","author","content","length"],"sourceRoot":""}