{"version":3,"file":"static/js/391.e2144516.chunk.js","mappings":"8PACA,EAA8B,8B,SCU9B,EARwB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACI,SAAC,KAAD,CAAMD,GAAIA,EAAIE,UAAWC,EAAzB,SACCF,GAGN,E,SC+ED,MA9EA,WAA6B,IAAD,IAC1B,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAK3CC,EAAAA,EAAAA,YAAU,WACVC,EAAgBR,EACjB,GAAE,CAACA,IAEJ,IAAMQ,EAAe,mCAAG,WAAOR,GAAP,uFAEpBD,GAAW,GAFS,UAGDU,EAAAA,EAAAA,IAAmBT,GAHlB,OAGdU,EAHc,OAIpBf,EAASe,GAJW,gDAOpBb,EAAS,2BAPW,yBASrBE,GAAW,GATU,4EAAH,sDAcrB,OACE,+BACE,4BACE,SAAC,EAAD,CAAUV,GAAIe,EAAd,kBAECN,GAAW,cACXF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBACEiB,IAAMjB,EAAMkB,YAAN,0CAAuDlB,EAAMkB,aAAgBC,EACnFC,IAAKpB,EAAMqB,SAEb,wBAAKrB,EAAMqB,SACX,6BAnCc,IAAIC,KAAKtB,EAAMuB,cAAcC,cAmC3C,QACA,wCAAgBxB,EAAMyB,eACtB,4BACE,sCACA,uBAAIzB,EAAM0B,kBAKhB,4BACU,oDACA,SAAC,KAAD,CACN/B,GAAE,kBAAaW,EAAb,SAEFK,MAAOH,EAASG,MAHV,UAKN,mCAEF,SAAC,KAAD,CACEhB,GAAE,kBAAaW,EAAb,YAEFK,MAAOH,EAASG,MAHlB,UAKE,sCAGF,SAAC,KAAD,WAKT,C,+LC/EKgB,EAAM,mCAECC,EAAS,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,kEACuCF,EADvC,oBAFC,cAElBG,EAFkB,yBAMhBA,EAASd,KAAKe,SANE,gCAQpBC,QAAQC,IAAR,MARoB,yDAAH,qDAYTC,EAAgB,mCAAG,WAAOC,GAAP,gGAERN,EAAAA,EAAAA,IAAA,4DACiCF,EADjC,kBAC8CQ,EAD9C,oBAFQ,cAEzBL,EAFyB,yBAKnBA,EAASd,KAAKe,SALK,gCAQ3BC,QAAQC,IAAR,MAR2B,yDAAH,sDAYhBlB,EAAkB,mCAAG,WAAOqB,GAAP,gGAEVP,EAAAA,EAAAA,IAAA,6CACkBO,EADlB,oBACgCT,EADhC,oBAFU,cAE3BG,EAF2B,yBAKrBA,EAASd,MALY,gCAQ7BgB,QAAQC,IAAR,MAR6B,yDAAH,sDAYlBI,EAAkB,mCAAG,WAAOD,GAAP,gGAEVP,EAAAA,EAAAA,IAAA,6CACkBO,EADlB,4BACwCT,EADxC,oBAFU,cAE3BG,EAF2B,yBAMzBA,EAASd,KAAKsB,MANW,gCAQ7BN,QAAQC,IAAR,MAR6B,yDAAH,sDAalBM,EAAkB,mCAAI,WAAOH,GAAP,gGAEXP,EAAAA,EAAAA,IAAA,6CACkBO,EADlB,4BACwCT,EADxC,oBAFW,cAE5BG,EAF4B,OAKjCE,QAAQC,IAAIH,EAASd,KAAKe,SALO,kBAM1BD,EAASd,KAAKe,SANY,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAJ,qD","sources":["webpack://react-homework-template/./src/components/BackLink/BackLink.module.css?aa43","components/BackLink/BackLink.js","components/MovieDetails/MovieDetails.js","components/fechApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button_back\":\"BackLink_button_back__zTYKQ\"};","import { Link } from \"react-router-dom\";\nimport css from 'components/BackLink/BackLink.module.css'\n\nexport const BackLink = ({ to, children }) => {\n  return (\n      <Link to={to} className={css.button_back}>\n      {children}\n    </Link>\n  );\n};\n\nexport default BackLink;","\nimport {useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { fetchMoviesDetails } from 'components/fechApi';\nimport BackLink from 'components/BackLink/BackLink'\n\nimport NoImage from 'components/img/no-img.png' \n\n\nfunction DetailsMoviePage() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n    const getYear = () => new Date(movie.release_date).getFullYear(); \n    \n    \n    useEffect(() => {\n    getDetailsMovie(movieId);\n  }, [movieId]);\n\n  const getDetailsMovie = async (movieId) => {\n    try {\n      setLoading(true);\n      const data = await fetchMoviesDetails(movieId);\n      setMovie(data);\n     \n    } catch {\n      setError('Something went wrong...');\n    } finally {\n     setLoading(false);\n    }\n  }  \n    \n\n  return (\n    <>\n      <div>\n        <BackLink to={backLinkHref}>Back</BackLink>\n        \n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={ movie.poster_path ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}` : NoImage}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        )}\n        \n        <div>\n                  <h2>Additional Information</h2>\n                  <NavLink\n            to={`/movies/${movieId}/cast`}\n            \n            state={location.state}\n          >\n            <p>Cast</p>\n          </NavLink>\n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n           \n            state={location.state}\n          >\n            <p>Reviews</p>\n          </NavLink>\n\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DetailsMoviePage;","import axios from 'axios';\n\n\n//https://api.themoviedb.org/3/movie/550?api_key=4e74e3ce82b875f858122cbc5cfec5bf\n\n\n\nconst KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\n"],"names":["to","children","className","css","useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","getDetailsMovie","fetchMoviesDetails","data","src","poster_path","NoImage","alt","title","Date","release_date","getFullYear","popularity","overview","KEY","getMovies","axios","response","results","console","log","getMoviesByQuery","query","id","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}