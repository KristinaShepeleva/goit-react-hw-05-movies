{"version":3,"file":"static/js/226.b35b1092.chunk.js","mappings":"+SAOMA,EAAM,mCAECC,EAAS,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,kEACuCF,EADvC,oBAFC,cAElBG,EAFkB,yBAMhBA,EAASC,KAAKC,SANE,gCAQpBC,QAAQC,IAAR,MARoB,yDAAH,qDAYTC,EAAgB,mCAAG,WAAOC,GAAP,gGAERP,EAAAA,EAAAA,IAAA,4DACiCF,EADjC,kBAC8CS,EAD9C,oBAFQ,cAEzBN,EAFyB,yBAKnBA,EAASC,KAAKC,SALK,gCAQ3BC,QAAQC,IAAR,MAR2B,yDAAH,sDAYhBG,EAAkB,mCAAG,WAAOC,GAAP,gGAEVT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,oBACgCX,EADhC,oBAFU,cAE3BG,EAF2B,yBAKrBA,EAASC,MALY,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,sDAYlBK,EAAkB,mCAAG,WAAOD,GAAP,gGAEVT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,4BACwCX,EADxC,oBAFU,cAE3BG,EAF2B,yBAMzBA,EAASC,KAAKS,MANW,gCAQ7BP,QAAQC,IAAR,MAR6B,yDAAH,sDAalBO,EAAkB,mCAAI,WAAOH,GAAP,gGAEXT,EAAAA,EAAAA,IAAA,6CACkBS,EADlB,4BACwCX,EADxC,oBAFW,cAE5BG,EAF4B,OAKjCG,QAAQC,IAAIJ,EAASC,KAAKC,SALO,kBAM1BF,EAASC,KAAKC,SANY,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAJ,qD,yGCnB/B,UAnCA,WACE,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAGAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAED,IAAMA,EAAmB,mCAAG,oGAExBF,GAAW,GAFa,UAGLpB,EAAAA,EAAAA,MAHK,OAGlBG,EAHkB,OAIxBa,EAAUb,GAJc,gDAO1Be,EAAS,EAAD,IAPkB,yBAS3BE,GAAW,GATgB,4EAAH,qDAa3B,OACE,+BACM,4BACI,2CACCD,GAAW,cACVJ,IAAU,SAAC,IAAD,CAAaA,OAAQA,IAChCE,IAAS,+DAKvB,C,oDCPD,IA3BmB,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OACfQ,GAAWC,EAAAA,EAAAA,MAChB,OACE,+BACE,wBACGT,EAAOU,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAajB,GAAMkB,MAAO,CAAEC,KAAMN,GAA1C,UAEE,uBAAIG,OAHChB,EADC,OAWnB,C","sources":["api/fechApi.js","page/HomePage/homePage.js","page/MoviesList/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\n\n//https://api.themoviedb.org/3/movie/550?api_key=4e74e3ce82b875f858122cbc5cfec5bf\n\n\n\nconst KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\n","import { useEffect, useState } from 'react';\nimport { getMovies } from 'api/fechApi';\nimport MoviesList from 'page/MoviesList/MoviesList'\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n \n\n  useEffect(() => {\n    fetchTrendingMovies();\n  }, []);\n  \n    const fetchTrendingMovies = async () => {\n    try {\n        setLoading(true);\n        const data = await getMovies();\n        setMovies(data);\n      \n    } catch (error) {\n      setError(error);\n    } finally {\n     setLoading(false);\n    }\n    };\n    \n  return (\n    <>\n          <div>\n              <h1>Trending Today</h1>\n              {loading && 'Loading ...'}\n               {movies && <MoviesList  movies={movies}/>}\n              {error && <p>Something went wrong. Try later</p>}\n             \n      </div>\n    </>\n  );\n}\nexport default HomePage;","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              \n              <p>{original_title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  \n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MoviesList;"],"names":["KEY","getMovies","axios","response","data","results","console","log","getMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","fetchTrendingMovies","location","useLocation","map","original_title","to","state","from"],"sourceRoot":""}